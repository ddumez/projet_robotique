Constants

M=40;
epsilon = 0.001;

pi=3.141592653590;

//cercles a eviter
No = 27;
o[No][3] = ( (-12, -6, 1.5) ; (-12, 0, 1.1) ; (-12, 6, 1.8) ; (-6, -18,
2.8) ; (-6, -12, 2.9) ; (-6, -6, 0.6) ; (-6, 0, 1.6) ; (-6, 6, 0.4) ; (-6,
12, 1.9) ; (-6, 18, 0.4) ; (0, -24, 2.4) ; (0, -12, 1.9) ; (0, -6, 0.5) ;
(0, 0, 1.8) ; (0, 6, 2.9) ; (0, 12, 1.7) ; (0, 24, 0.5) ; (6, -18, 1.9) ;
(6, -12, 2.8) ; (6, -6, 0.4) ; (6, 0, 1.9) ; (6, 6, 0.3) ; (6, 12, 2.3) ;
(6, 18, 1.2) ; (12, -6, 2.8) ; (12, 0, 1.3) ; (12, 6, 2.1) );

//parametres ideaux
//o11=-22.5;
//o12=0;
//o21=22.5;
//o22=0;
//l1=17.8;
//l2=17.8;
//l3=17.8;
//l4=17.8;

//parametres reel issu de la calibration
o11=-22.46174947;
o12=0.03725057;
o21=22.60218071;
o22=-0.19941578;
l1=17.79576115;
l2=17.7979901;
l3=17.89124913;
l4=17.50228139;

//======================================
//= Exercice dependant constants
//x1=0 + 5 *cos(0);
//x2=-20 + 5*sin(0);
//======================================
//t1=0;
//t2=pi;
//======================================


Variables

//======================================
//= Exercice dependant variables
x1 in [-M,+M];
x2 in [-M,+M];
//======================================

t1 in [-pi,pi];
t2 in [-pi,pi];
//======================================


Constraints

(o11+cos(t1)*l1-x1)^2+(o12+sin(t1)*l1-x2)^2=l2^2;
(o21+cos(t2)*l4-x1)^2+(o22+sin(t2)*l4-x2)^2=l3^2;

    // direct kinematic
    //t1 = pi/4;
    //t2 = 0;

    // inverse kinematic
    //x1 = 2;
    //x2 = 3;


//mettre les contraintes pour eviter les singularitees parralleles
	//verions avec la jacobienne non singuliere demande un -e 0.6 donc mauvais
	//( x1-o11-cos(t1)*l1)*( x2-o22-sin(t2)*l4) - ( x2-o12-sin(t1)*l1)*( x1-o21-cos(t2)*l4) >= epsilon;
	//version semantique : pas les 2 bras (donc les 3 points alignie)
	(x1^2 + x2^2 - (o11+cos(t1)*l1)*x1 - (o12+sin(t1)*l1)*x2 - (o21+cos(t2)*l4)*x1 - (o22+sin(t2)*l4)*x2 + (o11+cos(t1)*l1)*(o21+cos(t2)*l4) + (o12+sin(t1)*l1)*(o22+sin(t2)*l4))^2 >= epsilon;


//cercles a eviter
for i=1:No;
	(o(i)(1) - x1)^2 + (o(i)(2) - x2)^2 >= o(i)(3)^2 + epsilon;
end

//-e 0.2 -E 0.8
   
end
